/*
 * Copyright 2017 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const m                     = require('mithril');
const f                     = require('helpers/form_helper');
const ComponentMixins       = require('helpers/mithril_component_mixins');
const PluginCollapsibleList = require('views/shared/plugin_config/plugin_collapsible_list');

const ElasticProfileWidget = {
  oninit(vnode) {
    this.args = vnode.attrs;
    ComponentMixins.HasViewModel.call(this);
  },

  view(vnode) {
    const profile = vnode.attrs.profile;
    let actionIcons;

    if (vnode.attrs.pluginInfo) {
      actionIcons = (
        <div class="plugin-actions">
          <f.link class="edit-profile" onclick={vnode.attrs.onEdit}/>
          <f.link class="clone-profile" onclick={vnode.attrs.onClone}/>
          <f.link class="delete-profile-confirm" onclick={vnode.attrs.onDelete}/>
        </div>
      );
    } else {
      actionIcons = (
        <div class="plugin-actions">
          <f.link class="edit-profile disabled" title="Plugin not found"/>
          <f.link class="clone-profile disabled" title="Plugin not found"/>
          <f.link class="delete-profile-confirm" onclick={vnode.attrs.onDelete}/>
        </div>
      );
    }
    return (
      <PluginCollapsibleList headerKey="Profile ID" headerValue={profile.id()} properties={profile.properties()}
                             actionIcons={actionIcons}/>
    );
  }
};

module.exports = ElasticProfileWidget;
