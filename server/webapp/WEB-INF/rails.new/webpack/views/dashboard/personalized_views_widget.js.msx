/*
 * Copyright 2018 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const m = require("mithril");
const f = require("helpers/form_helper");

const ScrollableViewTabs = require("views/dashboard/scrollable_view_tabs");
const EditTabDropdown    = require("views/dashboard/edit_tab_dropdown");
const Editor             = require("views/dashboard/personalization_editor");

const PersonalizedViewsWidget = {
  oninit(vnode) {
    const vm = vnode.attrs.vm;
    if (!vm.canonicalCurrentName()) { vm.currentView("Default"); }
  },

  view(vnode) {
    const vm = vnode.attrs.vm;
    const doAddView = vm.actionHandler(() => !vm.locked() && Editor.open({}, vm.model, vm, vnode.attrs.onchange));

    return <div class="dashboard-tabs">
      <ActionableMessage vm={vm} />
      <ScrollableViewTabs vm={vm} />
      <EditTabDropdown {...vnode.attrs} />
      <AddTab onclick={doAddView} />
    </div>;
  }
};

const AddTab = {
  view(vnode) {
    return <div class="add-tab" {...vnode.attrs}>
      <i class="fa fa-plus" />
    </div>;
  }
};

const ActionableMessage = {
  view(vnode) {
    const vm = vnode.attrs.vm;

    if (vm.locked()) {
      const onreset = () => { vm.stagedSort(null); m.redraw(); vm.onchange(); };

      const onsave = () => {
        vm.model().updateFilters(vm.stagedSort(), vm.etag()).done(() => {
          vm.names(vm.model().names());
          onreset();
        });
      };

      return <div class="save-tab-order-confirmation">
        <i class="revert fa fa-close" onclick={onreset}></i>
        <span class="save-tab-order-message">Save tab order?</span>
        <f.button class="btn-primary" onclick={onsave}>Save</f.button>
        <f.button class="btn-link" onclick={onreset}>Revert</f.button>
      </div>;
    }
  }
};

module.exports = PersonalizedViewsWidget;
