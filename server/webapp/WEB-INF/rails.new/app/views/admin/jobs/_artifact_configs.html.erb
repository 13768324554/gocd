<div class="form_content">
  <div class="artifacts_plan_section popup_form">
    <textarea id="artifact_template_build" class="template">
      <div class="existing-artifact">
        <%= render :partial => 'built_in_artifact_table_headers' %>
        <%= scope[:form].fields_for :artifactConfigs, :index => "" do |var_form| %>
        <div class="row expanded">
          <div class="name_value_cell columns medium-2 large-2">
            <label class="type_label">Build Artifact</label>
            <%= var_form.hidden_field "artifactTypeValue", :id => nil, :value => 'Build Artifact' -%>
          </div>
          <%= render :partial => 'builtin_artifact_form', :locals => {:scope => {:var_form => var_form}} %>
        </div>
        <% end %>
      </div>
    </textarea>
    <textarea id="artifact_template_test" class="template">
      <div class="existing-artifact">
        <%= render :partial => 'built_in_artifact_table_headers' %>
        <%= scope[:form].fields_for :artifactConfigs, :index => "" do |var_form| %>
        <div class="row expanded">
          <div class="name_value_cell columns medium-2 large-2">
            <label class="type_label">Test Artifact</label>
            <%= var_form.hidden_field "artifactTypeValue", :id => nil, :value => 'Test Artifact' -%>
          </div>
          <%= render :partial => 'builtin_artifact_form', :locals => {:scope => {:var_form => var_form}} %>
        </div>
        <% end %>
      </div>
    </textarea>

    <textarea id="artifact_template_external" class="template">
      <% if scope[:artifact_plugin_to_view].empty? %>
        <div class="row expanded">
          <div class="columns medium-12 large-12 end">
            <span class="callout info">No artifact plugins installed. Please add the required artifact plugin before configuring properties.</span>
          </div>
        </div>
      <% elsif scope[:store_id_to_plugin_id].empty? %>
        <div class="row expanded">
          <div class="columns medium-12 large-12 end">
            <span class="callout info">No artifact stores configured. Please configure an artifact store before adding configuration for an external artifact.</span>
          </div>
        </div>
      <% else %>
        <div class="existing-artifact">
          <%= render :partial => 'external_artifact_table_headers' %>
          <%= scope[:form].fields_for :artifactConfigs, :index => "" do |var_form| %>
          <div class="row expanded">
            <div class="name_value_cell columns medium-2 large-2">
            <label class="type_label">External Artifact</label>
              <%= var_form.hidden_field "artifactTypeValue", :id => nil, :value => 'External Artifact' -%>
            </div>
            <div class="columns medium-3 large-3">
            <%= var_form.text_field "id", :class => "form_input artifact_source", :id => nil -%>
            </div>
            <div class="columns medium-3 large-3">
            <%= var_form.text_field "storeId", :class => "form_input artifact_source stores_auto_complete", :id => nil -%>
            </div>
            <div class="name_value_cell columns medium-4 large-4 end">
              <span class="icon_remove delete_parent"></span>
            </div>
          </div>
          <div class="row expanded plugin_dropdown_background">
            <div class="columns medium-8 medium-offset-2 large-8 end">
              <span>Could not determine the plugin from the store. Please choose a plugin to configure the plugin properties.</span>
              <%= var_form.select('pluginId', scope[:artifact_plugin_to_view].keys(), {:include_blank => true}, {:class => 'artifact_plugin_selection'}) %>
            </div>
          </div>
            <div class="row expanded plugin_form_background">
              <div class="columns medium-8 medium-offset-2 large-8 end">
                <div id="plugin_form">
                  <% dom_id_for_publish_view = random_dom_id %>
                  <% form_name_provider_obj = form_name_provider(var_form) %>
                  <% scope[:plugged_artifact_angular_controller_element_id] = form_name_provider_obj.css_id_for("angular_" + dom_id_for_publish_view) %>
                  <% scope[:plugged_artifact_data_element_id] = form_name_provider_obj.css_id_for("data_" + dom_id_for_publish_view) %>
                  <div class="form_content">
                    <%= render :partial => "admin/shared/global_errors.html", :locals => {:scope => {}} -%>
                    <div id="material">
                      <div class="fieldset">
                        <div id="<%= scope[:plugged_artifact_angular_controller_element_id] %>" name="<%= scope[:plugged_artifact_angular_controller_element_id] %>" class="plugged_material">
                          <div class="form_item">

                            <div class="plugged_artifact_template">

                            </div>

                            <span id="<%= scope[:plugged_artifact_data_element_id] %>" class="plugged_material_data" style="display: none">
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                  <%= render :partial => 'shared/convert_tool_tips.html' %>
                </div>
              </div>
            </div>
            </div>
        <% end %>
      <% end %>
    </textarea>

    <div class="artifact">
      <% scope[:built_in_collection].each do |variable| -%>
        <%= scope[:form].fields_for com.thoughtworks.go.config.JobConfig::ARTIFACT_CONFIGS, variable, :index => "" do |var_form| %>
          <div class="existing-artifact">
            <%= render :partial => 'built_in_artifact_table_headers' %>
            <div class="row expanded">
              <div class="name_value_cell columns medium-2 large-2">
                <%= var_form.label variable.getArtifactTypeValue(), {:class => "type_label"} -%>
                <%= var_form.hidden_field "artifactTypeValue", :class => "form_input artifact_source", :id => nil -%>
              </div>
              <div class="name_value_cell columns medium-3 large-3">
                <%= var_form.text_field "source", :class => "form_input artifact_source", :id => nil -%>
                <%= error_message_on(variable, "source", :css_class => "form_error") %>
              </div>
              <div class="name_value_cell columns medium-3 large-3">
                <%= var_form.text_field "destination", :class => "form_input artifact_destination", :id => nil -%>
                <%= error_message_on(variable, "destination", :css_class => "form_error") %>
              </div>
              <div class="name_value_cell columns medium-4 large-4 end">
                <span class="icon_remove delete_artifact"></span>
              </div>
            </div>
          </div>
        <% end %>
      <%- end -%>

      <% scope[:external_artifact_collection].each do |variable| %>
        <%= scope[:form].fields_for com.thoughtworks.go.config.JobConfig::ARTIFACT_CONFIGS, variable, :index => "" do |var_form| %>
          <div class="existing-artifact">
            <%= render :partial => 'external_artifact_table_headers' %>
            <div class="row expanded">
              <div class="name_value_cell columns medium-2 large-2">
                <label class="type_label">External Artifact</label>
                <%= var_form.hidden_field "artifactTypeValue", :class => "form_input artifact_source", :id => nil -%>
              </div>
              <div class="name_value_cell columns medium-3 large-3">
                <%= var_form.text_field "id", :class => "form_input artifact_source", :id => nil -%>
                <%= error_message_on(variable, "id", :css_class => "form_error") %>
              </div>
              <div class="name_value_cell columns medium-3 large-3">
                <%= var_form.text_field "storeId", :class => "form_input artifact_destination stores_auto_complete", :id => nil -%>
                <%= error_message_on(variable, "storeId", :css_class => "form_error") %>
              </div>
              <div class="name_value_cell columns medium-4 large-4 end">
                <span class="icon_remove delete_artifact"></span>
              </div>
            </div>

              <div class="row expanded plugin_dropdown_background">
                <div class="columns medium-8 medium-offset-2 large-8 end">
                  <div class="plugin-select-form">
                    <span>Could not determine the plugin from the store. Please choose a plugin to configure the plugin properties.</span>
                    <%= var_form.select("pluginId", scope[:artifact_plugin_to_view].keys(), {:include_blank => true}, {:class => 'artifact_plugin_selection'}) %>
                  </div>
                </div>
              </div>

              <div class="row expanded plugin_form_background">
                <div class="columns medium-8 medium-offset-2 large-8 end">
                  <% if variable.getPluginId().blank? %>
                    <%= render :partial => 'external_artifact_key_value_form', :locals => {:scope => {:var_form => var_form, :external_artifact => variable, :artifact_meta_data_store => scope[:artifact_meta_data_store]}} %>
                  <% else %>
                    <%= render :partial => 'external_artifact_form', :locals => {:scope => {:var_form => var_form, :external_artifact => variable, :artifact_meta_data_store => scope[:artifact_meta_data_store]}} %>
                  <% end %>
                </div>
              </div>
          </div>
        <% end %>
      <%- end -%>
    </div>

    <div class="row expanded add_new_artifact">
      <div class="name_value_cell columns medium-12 large-12 end">
        <label>Select type:</label>
        <select class="small" id="select_artifact_type">
          <option value="Build Artifact">Build</option>
          <option value="Test Artifact">Test</option>
          <option value="External Artifact">External</option>
        </select>
        <%= action_icon({:type => "add", :text => 'Add', :href => "#", :class => "skip_dirty_stop add_artifact_button", :id => "add_artifact"}) %>
      </div>
    </div>
  </div>
  <div class="clear"></div>
</div>

<script type="text/javascript">
  Util.on_load(function () {
    jQuery("input[name='job[artifactConfigs][][storeId]']").keyup(addOnChangeListenerForStoreInput);
    addOnSelectListenerForPluginDropdown();

    function hookupStoresAutoComplete() {
      jQuery(".stores_auto_complete").autocomplete(<%== scope[:artifact_store_ids] %>, {
        multiple:      false,
        minChars:      0,
        matchContains: true,
        selectFirst:   false,
        width:         248
      });
    }

    jQuery('.delete_artifact').click(function (event) {
      jQuery(this).closest('.existing-artifact').remove();
    });


    jQuery('#add_artifact').click(function (event) {
      determineAppropriateFormToShow(jQuery('#select_artifact_type').val());
    });

    function determineAppropriateFormToShow(artifactTypeValue) {
      switch (artifactTypeValue) {
        case 'Build Artifact':
          addFormRowFor('#artifact_template_build');
          break;
        case 'Test Artifact':
          addFormRowFor('#artifact_template_test');
          break;
        case 'External Artifact':
          addFormRowFor('#artifact_template_external');
          hookupStoresAutoComplete();
          addOnSelectListenerForPluginDropdown();
          jQuery("input[name='job[artifactConfigs][][storeId]']").keyup(addOnChangeListenerForStoreInput);
          break;
      }
    }


    function addOnChangeListenerForStoreInput(event) {
      var inputElement      = jQuery(this);
      var selectedInput     = event.currentTarget || event.target;
      var storeIdToPluginId = <%== scope[:store_id_to_plugin_id].to_json %>;
      var pluginId          = storeIdToPluginId[selectedInput.value];
      var pluginDropdown    = inputElement.closest('.existing-artifact').find('.artifact_plugin_selection');
      pluginDropdown.val(pluginId);
      pluginDropdown.removeClass("hidden");
      showAppropriatePluginView(pluginId, inputElement)
    }

    function addOnSelectListenerForPluginDropdown() {
      jQuery('.artifact_plugin_selection').change(function (event) {
        var inputElement  = jQuery(this);
        var selectedInput = event.currentTarget || event.target;
        showAppropriatePluginView(selectedInput.value, inputElement);
      })
    }

    function showAppropriatePluginView(pluginId, inputElement) {
      inputElement.closest('.existing-artifact').find('.artifact_plugin_id').val(pluginId);
      var viewTemplate = <%== scope[:artifact_plugin_to_view].to_json%>;
      var pluginView   = viewTemplate[pluginId];
      if (pluginView) {
        inputElement.closest('.existing-artifact').find(".plugged_artifact_template").html(pluginView);
      }
      initializeAngular();
    }

    function initializeAngular() {
      var form_name_prefix                               = "job[artifactConfigs][]";
      var plugged_artifact_angular_controller_element_id = "<%= scope[:plugged_artifact_angular_controller_element_id] %>";
      var plugged_artifact_data_element_id               = "<%= scope[:plugged_artifact_data_element_id] %>";
      new TaskPluginView().initialize(plugged_artifact_angular_controller_element_id, plugged_artifact_data_element_id, form_name_prefix);

      new TaskPluginView().bootstrapAngular();
    }

    function addFormRowFor(selector) {
      var rowCreator = new EnvironmentVariables.RowCreator(jQuery(selector), 'div', '.delete_parent');
      var variables  = new EnvironmentVariables(
        jQuery('div.artifact'),
        rowCreator,
        null,
        function (inputs) {
          inputs.dirty_form();
        },
        function (row) {
          row.parents("form.dirtyform").data("dirty", true);
        });
      variables.addDefaultRow();
    }
  });
</script>