/*
 * Copyright 2016 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

define(['mithril'], function (m) {

  var SortHeaderWidget = {

    view: function (ctrl, args) {
      return (
        <label class="agents-table-header" onclick={args.toggleSortingOrder.bind(ctrl, args.attribute)}>{args.attrName}
          <div class={"sort " + args.sortOrder(args.attribute)}>
            <span class="up"/>
            <span class="down"/>
          </div>
        </label>
      )
    }
  };

  var AgentsTableHeader = {

    controller: function (args) {

      var sortType = function () {
        return m.route.param('sortBy');
      };

      var orderType = function () {
        return m.route.param('orderBy')
      };

      return {
        sortOrder: function (sortBy) {
          var attrName = sortType() || 'agentState';
          var orderBy  = orderType() || 'asc';
          return _.isEqual(attrName, sortBy) ? orderBy : '';
        },

        toggleSortingOrder: function (sortBy) {
          var sortingOrder = _.isEqual(sortBy, sortType()) ? (_.isEqual(orderType(), 'asc') ? 'desc' : 'asc') : 'asc';
          args.sortBy(sortBy, sortingOrder);
        }
      }
    },

    view: function (ctrl, args) {
      return (
        <thead style={args.style}>
        <tr>
          <th>
            <input type="checkbox"
                   checked={args.checkboxValue()}
                   onclick={m.withAttr('checked', args.onCheckboxClick)}
            />
          </th>
          <th>
            <SortHeaderWidget attribute={'hostname'} attrName={'Agent Name'} sortBy={args.sortBy}
                              sortOrder={ctrl.sortOrder}
                              toggleSortingOrder={ctrl.toggleSortingOrder}/>
          </th>
          <th>
            <SortHeaderWidget attribute={'sandbox'} attrName={'Sandbox'} sortBy={args.sortBy} sortOrder={ctrl.sortOrder}
                              toggleSortingOrder={ctrl.toggleSortingOrder}/>
          </th>
          <th>
            <SortHeaderWidget attribute={'operatingSystem'} attrName={'OS'} sortBy={args.sortBy}
                              sortOrder={ctrl.sortOrder}
                              toggleSortingOrder={ctrl.toggleSortingOrder}/>
          </th>
          <th>
            <SortHeaderWidget attribute={'ipAddress'} attrName={'IP Address'} sortBy={args.sortBy}
                              sortOrder={ctrl.sortOrder}
                              toggleSortingOrder={ctrl.toggleSortingOrder}/>
          </th>
          <th>
            <SortHeaderWidget attribute={'agentState'} attrName={'Status'} sortBy={args.sortBy}
                              sortOrder={ctrl.sortOrder}
                              toggleSortingOrder={ctrl.toggleSortingOrder}/>
          </th>
          <th>
            <SortHeaderWidget attribute={'freeSpace'} attrName={'Free Space'} sortBy={args.sortBy}
                              sortOrder={ctrl.sortOrder}
                              toggleSortingOrder={ctrl.toggleSortingOrder}/>
          </th>
          <th>
            <SortHeaderWidget attribute={'resources'} attrName={'Resources'} sortBy={args.sortBy}
                              sortOrder={ctrl.sortOrder}
                              toggleSortingOrder={ctrl.toggleSortingOrder}/>
          </th>
          <th>
            <SortHeaderWidget attribute={'environments'} attrName={'Environments'} sortBy={args.sortBy}
                              sortOrder={ctrl.sortOrder}
                              toggleSortingOrder={ctrl.toggleSortingOrder}/>
          </th>
        </tr>
        </thead>
      );
    }
  };

  return AgentsTableHeader;
});
