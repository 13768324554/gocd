/*
 * Copyright 2018 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const $                   = require('jquery');
const m                   = require('mithril');
const styles              = require('./app_header.scss');
const NotificationCenter  = require('views/components/notification_center/notification_center');
const ServerHealthSummary = require('views/components/server_health_summary/server_health_summary');

class AppHeader {
  view() { //fixme: remove zurb add create new styles

    const bodyElem               = $('body');
    const showAnalyticsDashboard = JSON.parse(bodyElem.attr('data-show-analytics-dashboard'));
    const canViewAdminPage       = JSON.parse(bodyElem.attr('data-can-user-view-admin'));
    const isUserAdmin            = JSON.parse(bodyElem.attr('data-is-user-admin'));
    const isGroupAdmin           = JSON.parse(bodyElem.attr('data-is-user-group-admin'));
    const canViewTemplates       = JSON.parse(bodyElem.attr('data-can-user-view-templates'));
    const userDisplayName        = bodyElem.attr('data-user-display-name') || "";
    const userAnonymous          = JSON.parse(bodyElem.attr('data-user-anonymous'));

    let analyticsMenu = "";
    if (showAnalyticsDashboard) {
      analyticsMenu = <li><a href="/go/analytics">Analytics</a></li>;
    }

    let adminMenu = <span>Admin</span>;
    if (canViewAdminPage) {
      if (isUserAdmin) {
        adminMenu =
          <li class="" aria-haspopup="true">
            <a href="#" onclick="return false;">Admin</a>
            <ul class="">
              <li class=""><a href="/go/admin/pipelines">Pipelines</a></li>
              <li class=""><a href="/go/admin/templates">Templates</a></li>
              <li class=""><a href="/go/admin/elastic_profiles">Elastic Agent Profiles</a></li>
              <li class=""><a href="/go/admin/artifact_stores">Artifact Stores</a></li>
              <li class=""><a href="/go/admin/config_xml">Config XML</a></li>
              <li class=""><a href="/go/admin/data_sharing/settings">Data Sharing</a></li>
              <li class=""><a href="/go/admin/config/server">Server Configuration</a></li>
              <li class=""><a href="/go/admin/users">User Summary</a></li>
              <li class=""><a href="/go/admin/backup">Backup</a></li>
              <li class=""><a href="/go/admin/plugins">Plugins</a></li>
              <li class=""><a href="/go/admin/package_repositories/new">Package Repositories</a></li>
              <li class="">
                <a href="#">Security</a>
                <ul class="">
                  <li class=""><a href="/go/admin/security/auth_configs">Authorization Configuration</a></li>
                  <li class="">
                    <a href="/go/admin/security/roles">Role Configuration</a>
                  </li>
                </ul>
              </li>
            </ul>
          </li>;
      } else if (isGroupAdmin) {
        adminMenu = <li>
          <a href="#" onClick="return false;">Admin</a>
          <ul className="menu vertical admin-dropdown">
            <li role="presentation"><a href="/go/admin/pipelines">Pipelines</a></li>
            <li role="presentation"><a href="/go/admin/templates">Templates</a></li>
            <li role="presentation"><a href="/go/admin/elastic_profiles">Elastic Agent Profiles</a></li>
            <li role="presentation"><a href="/go/admin/pipelines/snippet">Config XML</a></li>
            <li role="presentation"><a href="/go/admin/plugins">Plugins</a></li>
            <li role="presentation"><a href="/go/admin/package_repositories/new">Package Repositories</a></li>
          </ul>
        </li>;
      } else if (canViewTemplates) {
        adminMenu = <li>
          <a href="#" onClick="return false;">Admin</a>
          <ul className="menu vertical admin-dropdown">
            <li role="presentation"><a href="/go/admin/templates">Templates</a></li>
          </ul>
        </li>;
      }
    }

    let userMenu = "";
    if (!userAnonymous) {
      userMenu = <div class={styles.menu}>
        <ul style="list-style:none">
          <li class="current-user">
            <a href="#" onclick="return false;">{userDisplayName}</a>
            <ul>
              <li class={styles['menu-item']}><a class={styles['menu-text']}
                                                 href="/go/preferences/notifications">Preferences</a></li>
              <li class={styles['menu-item']}><a class={styles['menu-text']} href="/go/auth/logout">Sign out</a></li>
            </ul>
          </li>
        </ul>
      </div>;
    }

    return <div class={styles['top-bar']}>
      <div class={`${styles.leftside} ${styles.menu}`}>
        <ul style="list-style:none">
          <li class={styles['menu-item']}><a href="/go/pipelines" className="logo"></a></li>
          <li class={styles['menu-item']}><a class={styles['menu-text']} href="/go/pipelines">Pipelines</a></li>
          <li class={styles['menu-item']}><a class={styles['menu-text']} href="/go/environments">Environments</a></li>
          <li class={styles['menu-item']}><a class={styles['menu-text']} href="/go/agents">Agents</a></li>
          {analyticsMenu}
          {adminMenu}
        </ul>
      </div>
      <div class={styles.rightside}>
        <NotificationCenter/>
        <ServerHealthSummary/>
        <a class={`${styles['menu-item']} ${styles['menu-text']}`} href="https://gocd.org/help" target="_blank">Need
          Help?</a>
        {userMenu}
      </div>
    </div>;
  }
}

module.exports = AppHeader;
