/*
 * Copyright 2018 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const $                   = require('jquery');
const m                   = require('mithril');
const styles              = require('./app_header.scss');
const NotificationCenter  = require('views/components/notification_center/notification_center');
const ServerHealthSummary = require('views/components/server_health_summary/server_health_summary');
const Menu                = require('views/components/menu/menu');
const MenuItem            = require('views/components/menu/menu_item');

class AppHeader {
  view() { //fixme: remove zurb add create new styles

    const bodyElem               = $('body');
    const showAnalyticsDashboard = JSON.parse(bodyElem.attr('data-show-analytics-dashboard'));
    const canViewAdminPage       = JSON.parse(bodyElem.attr('data-can-user-view-admin'));
    const isUserAdmin            = JSON.parse(bodyElem.attr('data-is-user-admin'));
    const isGroupAdmin           = JSON.parse(bodyElem.attr('data-is-user-group-admin'));
    const canViewTemplates       = JSON.parse(bodyElem.attr('data-can-user-view-templates'));
    const userDisplayName        = bodyElem.attr('data-user-display-name') || "";
    const userAnonymous          = JSON.parse(bodyElem.attr('data-user-anonymous'));

    let analyticsMenu = "";
    if (showAnalyticsDashboard) {
      analyticsMenu = <MenuItem href="/go/analytics" name="Analytics"/>;
    }

    let adminMenu = <MenuItem name="Admin"/>;
    if (canViewAdminPage) {
      if (isUserAdmin) {
        adminMenu =
          <MenuItem name="Admin">
            <MenuItem href="/go/admin/pipelines" name="Pipelines"/>
            <MenuItem href="/go/admin/templates" name="Templates"/>
            <MenuItem href="/go/admin/elastic_profiles" name="Elastic Agent Profiles"/>
            <MenuItem href="/go/admin/artifact_stores" name="Artifact Stores"/>
            <MenuItem href="/go/admin/config_xml" name="Config XML"/>
            <MenuItem href="/go/admin/data_sharing/settings" name="Data Sharing"/>
            <MenuItem href="/go/admin/config/server" name="Server Configuration"/>
            <MenuItem href="/go/admin/users" name="User Summary"/>
            <MenuItem href="/go/admin/backup" name="Backup"/>
            <MenuItem href="/go/admin/plugins" name="Plugins"/>
            <MenuItem href="/go/admin/package_repositories/new" name="Package Repositories"/>
            <MenuItem name="Security">
              <MenuItem href="/go/admin/security/auth_configs" name="Authorization Configuration"/>
              <MenuItem href="/go/admin/security/roles" name="Role Configuration"/>
            </MenuItem>
          </MenuItem>;
      } else if (isGroupAdmin) {
        adminMenu = <MenuItem name="Admin">
          <MenuItem href="/go/admin/pipelines" name="Pipelines"/>
          <MenuItem href="/go/admin/templates" name="Templates"/>
          <MenuItem href="/go/admin/elastic_profiles" name="Elastic Agent Profiles"/>
          <MenuItem href="/go/admin/pipelines/snippet" name="Config XML"/>
          <MenuItem href="/go/admin/plugins" name="Plugins"/>
          <MenuItem href="/go/admin/package_repositories/new" name="Package Repositories"/>
        </MenuItem>;
      } else if (canViewTemplates) {
        adminMenu = <MenuItem name="Admin">
          <MenuItem href="/go/admin/templates" name="Templates"/>
        </MenuItem>;
      }
    }

    let userMenu = "";
    if (!userAnonymous) {
      userMenu =
        <Menu>
          <MenuItem name={userDisplayName}>
            <MenuItem href="/go/preferences/notifications" name="Preferences"/>
            <MenuItem href="/go/auth/logout" name="Sign out"/>
          </MenuItem>
        </Menu>;
    }

    return <div class={styles['top-bar']}>
      <div class={styles.leftside}>
        <a href="/go/pipelines" class="logo"></a>
        <Menu>
          <MenuItem href="/go/pipelines" name="Pipelines"/>
          <MenuItem href="/go/environments" name="Environments"/>
          <MenuItem href="/go/agents" name="Agents"/>
          {analyticsMenu}
          {adminMenu}
        </Menu>
      </div>
      <div class={styles.rightside}>
        <NotificationCenter/>
        <ServerHealthSummary/>
        <a class={`${styles['menu-item']} ${styles['menu-text']}`} href="https://gocd.org/help" target="_blank">Need
          Help?</a>
        {userMenu}
      </div>
    </div>;
  }
}

module.exports = AppHeader;
