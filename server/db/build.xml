<?xml version="1.0" encoding="UTF-8"?>
<!-- *************************GO-LICENSE-START******************************
 * Copyright 2014 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *************************GO-LICENSE-END******************************* -->

<project name="dbdeploy" default="rebuild-db" basedir=".">

    <property name="module.dir" location="${basedir}/.." />
    <property file="${basedir}/h2db/server.properties" />
    <import file="${module.dir}/../ivy.ant.common.xml" />

    <property name="lib.dir" location="${ivy.local.default.root}" />

    <property name="db.dba.user" value="sa" />
    <property name="db.dba.user_password" value="" />
    <property name="server.port" value="9002"/>
    <property name="db.port" value="${server.port}" />
    <property name="db.host" value="localhost:${server.port}" />
    <property name="db.driver" value="org.h2.Driver" />
    <property name="db.url" value="jdbc:h2:tcp://localhost:${db.port}/cruise" />
    <property name="db.dir" location="${basedir}/h2db" />
    <property name="db.name" value="cruise" />
    <property name="sql.dir" location="${basedir}/migrate" />
    <property name="schema.dir" location="${sql.dir}/schema" />
    <property name="sql.dir.out" location="${sql.dir}/generated" />

    <path id="db.classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <macrodef name="exec_sql">
        <attribute name="src" />
        <attribute name="user" />
        <attribute name="password" />
        <attribute name="onerror" />
        <sequential>
            <sql classpathref="db.classpath" driver="${db.driver}"
                 url="${db.url}" userid="@{user}" password="@{password}" src="@{src}" onerror="@{onerror}" />
        </sequential>
    </macrodef>

    <macrodef name="exec_admin_sql">
        <attribute name="src" />
        <attribute name="onerror" default="abort" />
        <sequential>
            <exec_sql src="@{src}" user="${db.dba.user}" password="${db.dba.user_password}" onerror="@{onerror}" />
        </sequential>
    </macrodef>

    <macrodef name="start_db">
        <attribute name="standalone" default="false" />
        <sequential>
            <echo message="Starting H2" />
            <echo message="Using: ${db.dir}/${db.name}" />
            <parallel>
                <daemons>
                    <java fork="true" maxmemory="256M" dir="${db.dir}" classname="org.h2.tools.Server" spawn="@{standalone}">
                        <classpath refid="db.classpath" />
                        <arg value="-tcp" />
                        <arg value="-baseDir" />
                        <arg value="." />
                        <arg value="-tcpPort" />
                        <arg value="${db.port}" />
                    </java>
                </daemons>
                <waitfor maxwait="10" maxwaitunit="second" checkevery="500" timeoutproperty="-failed_to_startup">
                    <socket server="127.0.0.1" port="${db.port}" />
                </waitfor>
            </parallel>
            <fail if="-failed_to_startup" message="Failed to startup hsql on port: ${db.port}" />
        </sequential>
    </macrodef>

    <target name="stop-db" description="Stop running db">
        <subant buildpath="${basedir}" target="-stop-db" inheritall="false" failonerror="false" />
    </target>

    <target name="-stop-db">
        <exec_admin_sql src="${schema.dir}/shutdown.sql" />
    </target>

    <target name="-init">
        <delete dir="${sql.dir.out}" />
        <mkdir dir="${sql.dir.out}" />
    </target>

    <target name="-clean.database">
        <delete dir="${db.dir}" verbose="true" />
        <mkdir dir="${db.dir}" />
    </target>

    <target name="-build-db-baseline">
        <exec_admin_sql src="${schema.dir}/create_schema.sql" />
        <exec_admin_sql src="${schema.dir}/createSchemaVersionTable.hsql.sql" onerror="continue" />
    </target>

    <target name="-execute-delta-script">
        <exec_admin_sql src="${sql.dir.out}/db-deltas-hsql.sql" onerror="abort" />
    </target>

    <target name="generate-delta-script" description="Uses dbdeploy to generate the update and undo scripts">
        <taskdef name="dbdeploy" classname="net.sf.dbdeploy.AntTarget" classpathref="db.classpath" />
        <dbdeploy driver="${db.driver}" url="${db.url}" userid="${db.dba.user}" password="${db.dba.user_password}"
                  dir="${sql.dir}/h2deltas/" outputfile="${sql.dir.out}/db-deltas-hsql.sql" dbms="hsql" deltaset="DDL"
                  undoOutputfile="${sql.dir.out}/db-deltas-hsql-UNDO.sql" />
    </target>

    <target name="execute-undo" description="Executes the undo script generated by dbdeploy">
        <exec_admin_sql src="${sql.dir.out}/db-deltas-hsql-UNDO.sql" onerror="abort" />
    </target>

    <target name="initialize" depends="-init, -build-db-baseline" description="Build the initial db schema" />

    <target name="apply-deltas" depends="-init, generate-delta-script, -execute-delta-script" />

    <target name="rebuild-db" depends="-clean.database, h2db, initialize, generate-delta-script, -execute-delta-script, stop-db" 
            description="Rebuild the database, apply deltas" />

    <target name="standalone" description="Start the database standalone">
        <start_db standalone="true" />
    </target>

    <target name="h2db" description="Starts the database; use standalone instead if testing on the command line">
        <start_db />
    </target>

    <target name="dbmgr" description="Start the HSQLDB Manager GUI">
        <echo message="Starting HSQLDB Manager in new thread" />
        <java fork="true" dir="${db.dir}" classname="org.hsqldb.util.DatabaseManager" spawn="true">
            <classpath refid="db.classpath" />
        </java>
    </target>

</project>