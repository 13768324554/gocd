<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- *************************GO-LICENSE-START******************************
 * Copyright 2014 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *************************GO-LICENSE-END******************************* -->

<project name="cruise" basedir="." default="fast">

    <!-- All the important stuff is in these files -->
        <property name="imports" value="${basedir}/build"/>

        <import file="${imports}/filesets.xml"/>
        <import file="${imports}/should_run.xml"/>
        <import file="${imports}/clean.xml"/>
        <import file="${imports}/compile.xml"/>
        <import file="${imports}/ivy.xml"/>
        <import file="${imports}/database.xml"/>
        <import file="${imports}/dist.xml"/>
        <import file="${imports}/perf.xml"/>
        <import file="${imports}/qa.xml"/>
        <import file="${imports}/deploy.xml"/>
        <import file="${imports}/cruise.xml"/>
        <import file="${imports}/taskdefs.xml"/>
        <import file="${imports}/server/macros.xml"/>
        <import file="${imports}/obfuscate.xml"/>
        <import file="${imports}/killprocess.xml"/>


    <target name="fast" description="The fast build"
            depends="clean, checkstyle, compile, dist"/>

    <target name="personal" description="The personal build"
            depends="clean, compile"/>


    <target name="all" description="The fast build, plus the long running tests"
            depends="fast, perf.all"/>
    <target name="qa.test" description="to deploy and run qa test"
            depends="install.linux.server, install.linux.agent"/>

    <target name="clean" description="Clean all folders"
            depends="clean.all"/>
    <target name="checkstyle" description="Run checkstyle on all projects"
            depends=""/>
    <target name="compile" description="Compile all source and tests"
            depends="compile.all"/>

    <target name="dist" depends="dist.fast"
            description="Create distribution artifacts for all projects"/>
    <target name="uat" description="Deploy to uat environment" depends="deploy.server.uat.manual"/>
    <target name="prod" description="Deploy to production environment" depends="deploy.server.prod.manual"/>
    <target name="ea-test" description="Deploy to EA testing file server"/>
    <target name="ea-stable" description="Deploy to EA stable file server"/>

    <target name="dev" description="" depends="-run?, clean.ivy.localivy, clean"/>

    <target name="analysis" description="Cruise task to run tests an perform analysis on the results"
            depends="-run?, clean.ivy.localivy, clean"
            />

    <!-- Makes things easier -->

    <target name="compress_js" depends="-preparing.compile.server.concat_js,-preparing.compile.server.js.minify">
        <copy todir="${dir.server}/jsunit/compressed" overwrite="true">
            <fileset dir="${dir.server.war}/compressed" includes="all.js"/>
        </copy>
    </target>



    <!-- Prepare Docs -->
    <target name="build-docs" description="Render the help documentations with rake task.">
        <exec dir="helper" executable="rake">
        </exec>
    </target>




    <target name="run">
        <parallel>
            <exec dir="target/cruise-server-1.2" executable="/bin/bash">
                <arg value="server.sh"/>
            </exec>
            <exec dir="target/cruise-agent-1.2" executable="/bin/bash">
                <arg value="agent.sh"/>
            </exec>
        </parallel>
    </target>
</project>

