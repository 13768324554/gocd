<!-- *************************GO-LICENSE-START******************************
 * Copyright 2014 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *************************GO-LICENSE-END******************************* -->

<project basedir="..">
    <import file="should_run.xml"/>
    <import file="common_properties.xml"/>

    <property name="agent.osx.prefix" value="Go Agent.app"/>
    <property name="server.osx.prefix" value="Go Server.app"/>

    <property name="target.osx.agent.pkg" value="${target.pkg}/${agent.osx.prefix}"/>
    <property name="target.osx.server.pkg" value="${target.pkg}/${server.osx.prefix}"/>

    <target name="-dist.osx.can_create" depends="-preparing.dist.current_revision_number">
        <condition property="-dist.osx.can_create">
            <and>
                <available file="/usr/bin/zip"/>
                <isset property="-current.revision.short"/>
            </and>
        </condition>
    </target>

    <target name="dist.agent.osx" depends="-dist.osx.can_create">
        <fail unless="-dist.osx.can_create">Build Failed. Cause: Either /usr/bin/zip not present or failed to fetch current revision number.</fail>
        <echo message="About to create Go Agent" />
        <build-osx pkg="agent" pkgName="Agent"/>
    </target>

    <target name="dist.server.osx" depends="-dist.osx.can_create">
        <fail unless="-dist.osx.can_create">Build Failed. Cause: Either /usr/bin/zip not present or failed to fetch current revision number.</fail>
        <build-osx pkg="server" pkgName="Server"/>
    </target>

    <macrodef name="build-osx">
        <attribute name="pkg"/>
        <attribute name="pkgName" />
        <sequential>
            <echo message="@{pkg}-regver=${cc.version}.${-current.revision.short}" file="${target}/@{pkg}-regver.properties"/>
            <replace file="${target}/@{pkg}-regver.properties" token="." value=""/>
            <loadproperties srcFile="${target}/@{pkg}-regver.properties"/>

            <mkdir dir="${target.osx.@{pkg}.pkg}/Contents"/>
            <copy file="${basedir}/installers/@{pkg}/osx/Info.plist"
                todir="${target.osx.@{pkg}.pkg}/Contents">
                <filterset>
                    <filter token="VERSION" value="${cc.version}.${-current.revision.short}"/>
                    <filter token="REGVER" value="${-current.revision}"/>
                </filterset>
            </copy>

            <mkdir dir="${target.osx.@{pkg}.pkg}/Contents/Resources"/>
            <copy file="${basedir}/build/icons/go-@{pkg}.icns" todir="${target.osx.@{pkg}.pkg}/Contents/Resources"/>

            <mkdir dir="${target.osx.@{pkg}.pkg}/Contents/MacOS"/>

            <copy file="${basedir}/build/osx/JavaApplicationStub64"
                tofile="${target.osx.@{pkg}.pkg}/Contents/MacOS/go-@{pkg}"/>
            <chmod perm="0755" file="${target.osx.@{pkg}.pkg}/Contents/MacOS/go-@{pkg}"/>

            <unzip src="${target.pkg}/go-@{pkg}-${cc.version}-${-current.revision.short}.zip" dest="${target.osx.@{pkg}.pkg}"/>
            <move file="${target.osx.@{pkg}.pkg}/go-@{pkg}-${cc.version}"
                  tofile="${target.osx.@{pkg}.pkg}"/>

            <replace dir="${target.osx.@{pkg}.pkg}"
                 token="go-@{pkg}.log"
                 value="/Library/Logs/Go@{pkgName}/go-@{pkg}.log">
                <include name="**/log4j.properties"/>
            </replace>

            <!-- Exec zip here to make sure executable bits are kept, etc -->
            <exec executable="zip" failonerror="true" dir="${target.pkg}">
                <arg line="-q -r -9 go-@{pkg}-${cc.version}-${-current.revision.short}-osx.zip '${@{pkg}.osx.prefix}'"/>
            </exec>

            <delete dir="${target.osx.@{pkg}.pkg}"/>
        </sequential>
    </macrodef>

</project>
