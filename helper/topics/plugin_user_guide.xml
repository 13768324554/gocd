<?xml version="1.0"?>
<!-- *************************GO-LICENSE-START******************************
 * Copyright 2014 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *************************GO-LICENSE-END******************************* -->

<!DOCTYPE chapter SYSTEM "cruise_help.dtd">
<chapter title="Plugin User Guide">
    <section title="Introduction">
        <p>Plugins allow users to extend the functionality of Go.
            Each plugin is assigned an identifier which is determined by the <strong>id</strong> attribute provided in <exref url="go_plugins_basics.html#plugin_metadata">plugin metadata</exref> file packaged along with the plugin jar. If the metadata file is not packaged,
            plugin jar file name will be taken as plugin id.
            Plugins are classified into two categories - Bundled and External. During startup, Go server would try to load all the plugins. On successful load, the plugin will be converted into an OSGi bundle and
            extracted into <strong>&lt;server installation directory&gt;/plugins_work</strong> directory. <strong>Plugins</strong> tab, under Go server Administration, would list all the loaded plugins.
        </p>
    </section>
    <section title="Bundled versus External">
        <bullets>
            <item>
                <p><strong>Bundled Plugins:</strong> As the name suggests, bundled plugins are bundled/packaged along with Go server.
                    These are developed and supported by Thoughtworks Go development team.
                    Bundled plugins are located under <strong>&lt;server installation directory&gt;/plugins/bundled</strong> directory.
                    After an upgrade, when Go server starts up for the first time, all bundled plugins would be refreshed with the latest packaged versions. 
                </p>
            </item>
            <item>
                <p><strong>External Plugins:</strong> All user authored plugins are treated as external plugins.
                    Unlike bundled plugins, external plugins are not bundled/refreshed/removed/modified during a Go server upgrade.
                    External plugins are loaded from <strong>&lt;server installation directory&gt;/plugins/external</strong> directory.
                    <exref url="http://thoughtworksinc.github.io/go-external-plugins/">Listing of external plugins</exref>
                </p>
            </item>
        </bullets>
    </section>
    <section title="Installing and Uninstalling of plugins">
        <p>You need access to the Go server machine to be able to install/uninstall a plugin.
            To install a plugin, drop the plugin jar under the external plugin directory (<strong>&lt;server installation directory&gt;/plugins/external</strong>) and restart Go server.
            To uninstall a plugin, remove the plugin jar from the external plugin directory (<strong>&lt;server installation directory&gt;/plugins/external</strong>) and restart Go server.
        </p>
    </section>
    <section title="Plugins Tab">
        <p>
            Plugins tab can be found under Go server Administration. Plugins tab shows all the plugins that have been loaded currently along with its details and status.
            If a plugin is marked invalid or incompatible, the reasons for the same would be reported here.
        </p>
        <p>
            <img src="resources/images/cruise/package-repo/plugin-tab.png"/>
        </p>
    </section>
    <section title="Notes">
        <bullets>
            <item>Add/delete/upgrade of a plugin will take effect only after a Go server restart.</item>
            <item>Two plugins cannot have same <strong>id</strong> irrespective of whether it is a bundled or an external plugin.</item>
            <item>If two external plugins with same <strong>id</strong> are available, only one of them will be loaded successfully in no specific order.</item>
            <item>If a bundled and an external plugin with same <strong>id</strong> are available, only bundled plugin wll be loaded.</item>
        </bullets>
    </section>
</chapter>
