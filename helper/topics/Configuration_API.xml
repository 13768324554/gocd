<?xml version="1.0"?>
<!-- *************************GO-LICENSE-START******************************
 * Copyright 2014 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *************************GO-LICENSE-END******************************* -->

<!DOCTYPE topic SYSTEM "mingle_help.dtd">
<topic title="Configuration API">
	<note>The Go API documented here is a work in progress. Future versions may change this API.</note>

	<section title="Configuration versioning">
    <p>Go stores snapshots of all valid configuration files ever used by the server. Any change to configuration through Go admin pages or filesystem, if valid, is recorded and can be retrieved anytime in future.</p>
    <p>Go tracks these revisions through a unique fingerprint (digest) of configuration file data, and exposes an API to allow admins to retrieve any historical version, given the digest.</p>
    <note>Digest for configuration file is reported in the response to all of the following API calls as value of HTTP header field named 'X-CRUISE-CONFIG-MD5'.</note>
    <subsection title="Retriving historical configuration snapshot">
      <p>A user with admin privileges can invoke:
        <code>curl -u my_user:my_password http://yourservername:8153/go/api/admin/config/[digest].xml</code>
        to get the version of configuration identified by <i>[digest]</i>.
      </p>
      <p>
        For instance, if configuration as on a certain day has digest value 5059cf548db9ea2d1b9192b45529ccf0, it can be retrieved on any future day by invoking:
        <code>curl -u my_user:my_password http://yourservername:8153/go/api/admin/config/5059cf548db9ea2d1b9192b45529ccf0.xml</code>
      </p>
    </subsection>
    <subsection title="Other convenience APIs">
      <p>In addition to 'historical configuration version retrieval', Go exposes other convenience APIs around this feature, that allow retrieval of current configuration without passing in the digest value.</p>
      <code>curl -u my_user:my_password http://yourservername:8153/go/api/admin/config.xml</code> or
      <code>curl -u my_user:my_password http://yourservername:8153/go/api/admin/config/current.xml</code>
      can be invoked to fetch current/latest-version of config.
    </subsection>
  </section>

	<section title="Adding a new pipeline">
		<p>To add a pipeline, you perform a <b>POST</b> to the URL http://[server]/go/tab/admin/pipelines/[pipeline_name].json where pipeline_name is the name of the pipeline that you wish to create. Creating a pipeline supports the following parameters:</p>
        <p>For example, suppose you have switched on security and the username and the password are 'my_user' and 'my_password'. If you want to create a new pipeline named 'mypipeline', which uses an svn repository without username and password, and the location of repository is 'http://http://yoursvnrepository/trunk'. The command should be:</p>
        <code>curl -u my_user:my_password -d "url=http://yoursvnrepository/trunk" http://yourservername:8153/go/tab/admin/pipelines/mypipeline.json</code>
        <subsection title="General parameters">
			<table caption="Parameters">
				<header-row>
					<col-header>parameter name</col-header>
					<col-header>example value</col-header>
					<col-header>required</col-header>
					<col-header>Description</col-header>
				</header-row>
                <row>
                    <label>pipelineGroup</label>
                    <col>defaultGroup</col>
                    <col>No</col>
                    <col>The name of the Pipeline Group to add the new pipeline to. The pipeline group will be created if it does not already exist.</col>
                </row>
				<row>
					<label>builder</label>
					<col>ant</col>
					<col>No</col>
					<col>Can be 'ant', 'nant', 'rake' or 'exec'.</col>
				</row>
				<row>
					<label>buildfile</label>
					<col>build.xml</col>
					<col>No</col>
					<col>Not allowed for exec</col>
				</row>
				<row>
					<label>target</label>
					<col>all</col>
					<col>No</col>
					<col>Not allowed for exec</col>
				</row>
				<row>
					<label>command</label>
					<col>unittest.sh arg1 arg2</col>
					<col>No</col>
					<col>Required for exec</col>
				</row>
				<row>
					<label>source</label>
					<col>pkg</col>
					<col>No</col>
					<col>no default value</col>
				</row>
				<row>
					<label>dest</label>
					<col>installer</col>
					<col>No</col>
					<col>no default value</col>
				</row>
			</table>
		</subsection>
		<subsection title="Subversion">
			<table caption="Parameters">
				<header-row>
					<col-header>parameter name</col-header>
					<col-header>example value</col-header>
					<col-header>required</col-header>
					<col-header>Description</col-header>
				</header-row>
				<row>
					<label>scm</label>
					<col>svn</col>
					<col>No</col>
					<col>Default value is 'svn'</col>
				</row>
				<row>
					<label>url</label>
					<col>http://xxx.xx.xx.xx/mysvn/trunk</col>
					<col>Yes</col>
					<col>The URL of the Subversion repository</col>
				</row>
				<row>
					<label>username</label>
					<col>checkout_username</col>
					<col>No</col>
					<col/>
				</row>
				<row>
					<label>password</label>
					<col>checkout_password</col>
					<col>No</col>
					<col/>
				</row>
			</table>
		</subsection>
		<subsection title="Mercurial">
			<table caption="Parameters">
				<header-row>
					<col-header>parameter name</col-header>
					<col-header>example value</col-header>
					<col-header>required</col-header>
					<col-header>Description</col-header>
				</header-row>
				<row>
					<label>scm</label>
					<col>hg</col>
					<col>Yes</col>
					<col/>
				</row>
				<row>
					<label>url</label>
					<col>http://xxx.xx.xx.xx/hg/my_project</col>
					<col>Yes</col>
					<col>The URL of the repository</col>
				</row>
			</table>
		</subsection>
		<subsection title="Git">
			<table caption="Parameters">
				<header-row>
					<col-header>parameter name</col-header>
					<col-header>example value</col-header>
					<col-header>required</col-header>
					<col-header>Description</col-header>
				</header-row>
				<row>
					<label>scm</label>
					<col>git</col>
					<col>Yes</col>
					<col/>
				</row>
				<row>
					<label>url</label>
					<col>git://github.com/foo/bar.git</col>
					<col>Yes</col>
					<col>The URL of the repository</col>
				</row>
			</table>
		</subsection>
		<subsection title="Perforce">
			<table caption="Parameters">
				<header-row>
					<col-header>parameter name</col-header>
					<col-header>example value</col-header>
					<col-header>required</col-header>
					<col-header>Description</col-header>
				</header-row>
				<row>
					<label>scm</label>
					<col>p4</col>
					<col>Yes</col>
					<col/>
				</row>
				<row>
					<label>url</label>
					<col>p4server.foo.com:1666</col>
					<col>Yes</col>
					<col>The P4PORT of the repository</col>
				</row>
				<row>
					<label>username</label>
					<col>checkout_username</col>
					<col>No</col>
					<col>The P4USER to connect to the repository</col>
				</row>
				<row>
					<label>password</label>
					<col>checkout_password</col>
					<col>No</col>
					<col>The P4PASSWD to connect to the repository</col>
				</row>
				<row>
					<label>useTickets</label>
					<col>true or false</col>
					<col>No</col>
					<col/>
				</row>
				<row>
					<label>view</label>
					<col>//depot/... //something/...</col>
					<col>Yes</col>
					<col/>
				</row>
			</table>
		</subsection>
        <subsection title="Team Foundation Server">
            <table caption="Parameters">
                <header-row>
                    <col-header>parameter name</col-header>
                    <col-header>example value</col-header>
                    <col-header>required</col-header>
                    <col-header>Description</col-header>
                </header-row>
                <row>
                    <label>scm</label>
                    <col>tfs</col>
                    <col>Yes</col>
                    <col/>
                </row>
                <row>
                    <label>url</label>
                    <col>http://tfs.host.com:8080/tfs/DefaultCollection</col>
                    <col>Yes</col>
                    <col>The url of your TFS collection</col>
                </row>
                <row>
                    <label>domain</label>
                    <col>COMPANYNAME</col>
                    <col>No</col>
                    <col>Domain name that the given user belong to</col>
                </row>
                <row>
                    <label>username</label>
                    <col>tfsuser</col>
                    <col>Yes</col>
                    <col>Username used to connect to the collection</col>
                </row>
                <row>
                    <label>password</label>
                    <col>tfspassword</col>
                    <col>No</col>
                    <col>Password for the given user name</col>
                </row>
                <row>
                    <label>projectPath</label>
                    <col>$/MyProject</col>
                    <col>Yes</col>
                    <col>Project path in the given collection</col>
                </row>
            </table>
        </subsection>
	</section>
</topic>
