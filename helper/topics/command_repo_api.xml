<?xml version="1.0"?>
<!-- *************************GO-LICENSE-START******************************
 * Copyright 2014 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *************************GO-LICENSE-END******************************* -->

<!DOCTYPE topic SYSTEM "mingle_help.dtd">
<topic title="Command Repo API">
    <p>
        This API allows you to reload the command repository cache on the Go server. Please refer to <cref topic="command_repository">Command Repository</cref> to get more information about the functionality.
    </p>
    <note>
        <strong>NOTE:</strong> Only Go administrator users will be able to use this API
    </note>
    <subsection title="Key">
        <table caption="Parameters">
            <header-row>
                <col-header>URL format</col-header>
                <col-header>HTTP Verb</col-header>
                <col-header>Data</col-header>
                <col-header>Explanation</col-header>
            </header-row>
            <row>
                <col>http://[server]/go/api/admin/command-repo-cache/reload</col>
                <label>POST</label>
                <col>no parameters</col>
                <col>Go server reloads command repository cache</col>
            </row>
        </table>
    </subsection>
    <subsection title="Examples">
        <bullets>
            <item>We use curl, a command line tool for transferring files with URL syntax, in the following examples. Of course, you can use any HTTP client library.</item>
            <item>We assume that the URL of the Go server is<strong>http://goserver.com:8153/</strong>.
            </item>
            <item>We assume security has been switched on, and that there is an admin user named
                <strong>jez</strong>
                with the password<strong>badger</strong>.
            </item>
        </bullets>

        <p>To reload the cache</p>
        <code>curl -u jez:badger -d "" http://goserver.com:8153/go/api/admin/command-repo-cache/reload</code>
    </subsection>
</topic>
