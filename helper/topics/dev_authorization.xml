<?xml version="1.0"?>
<!-- *************************GO-LICENSE-START******************************
 * Copyright 2014 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *************************GO-LICENSE-END******************************* -->

<!DOCTYPE chapter SYSTEM "cruise_help.dtd">
<chapter title="Authorization">
	<p>
        With no security switched on, there is of course no authorization either. Once you have configured
        security, the default is that any user can perform any operation. However you can get Go to limit certain
        operations to particular Users or Roles, and manage membership of those Roles.
    </p>
    <section title="Administrators">
        <p>Go allows you to restrict the users who can perform certain functions. Administrators is a special role that allows its members to perform any action in Go. Specifying administrators is optional -- without it, all users are automatically made administrators. </p>
        <p>If administrators are specified, only they can perform the following actions:</p>
        <bullets>
            <item>Access the "administration" tab</item>
            <item>Add/Edit Pipeline Templates</item>
            <item>Enable agents</item>
            <item>Add / remove agent resources</item>
        </bullets>
        <p>Users can be made administrators from the "User Summary" tab in the "Admin" section.</p>
        <screenshot src="resources/images/cruise/admin/user_summary_make_admin.png" />
        <p>To give admin privileges to users and/or roles via "Config xml", please refer to the example in the section below, where members of the "go_admin" role (jhumble and qiao), along with the user chris, can administer Go.</p>
    </section>
	<section title="Role-based security">
        <p>
	        You can define roles that can be used anywhere that authorization is required. A role is just a group
            of users. Administrators can add users to a new or existing role from the "User Summary" tab in the "Admin" section.
            Here, you can select any number of users and assign a new or existing role to them. In this example, user "aantony" is being added to the role "analyst"
        </p>
        <screenshot src="resources/images/cruise/admin/user_summary_add_user_to_role.png" />
        <p>
            For power users, here's how you would configure roles via "Config XML":
        </p>
	    <code>
&lt;cruise&gt;
  &lt;server&gt;
    &lt;license ... /&gt;
    &lt;security&gt;
      &lt;passwordFile path="/etc/go-server/passwords.properties" /&gt;<strong>
      &lt;roles&gt;
        &lt;role name="qa"&gt;
          &lt;user&gt;dyang&lt;/user&gt;
          &lt;user&gt;pavan&lt;/user&gt;
        &lt;/role&gt;
        &lt;role name="go_admin"&gt;
          &lt;user&gt;jhumble&lt;/user&gt;
          &lt;user&gt;qiao&lt;/user&gt;
        &lt;/role&gt;
      &lt;/roles&gt;</strong>
      &lt;admins&gt;
        &lt;role&gt;go_admin&lt;/role&gt;
        &lt;user&gt;chris&lt;/user&gt;
      &lt;/admins&gt;
    &lt;/security&gt;
  &lt;/server&gt;
&lt;/cruise&gt;
	    </code>
        <p>
	        In this example, the "qa" role has two users: dyang and pavan. The "go_admin" role also has two users:
            jhumble and qiao.
        </p>
	</section>
    <section title="Specifying permissions for pipeline groups" id="pipeline-groups">
        <p>
            Go allows you to group pipelines together. If you define pipeline groups, you can specify who is
            able to view or operate those groups. To do this, you configure permissions to the pipeline group.
            System administrators will continue to have full access to the pipeline group even if they have not been
            explicitly granted permissions.
        </p>
        <p>
            The <strong>"view" permission</strong> allows users to view the pipeline. It does not give permission
            to trigger pipelines, approve stages, or re-run stages. In the below example, the users "akrishna" and
            "aantony" can view the pipelines in this group, but they cannot perform any operations on it.
        </p>
        <p>
            The <strong>"operate" permission</strong> allows users to trigger pipelines and its stages. In the below
            example, the role "developer" is being granted the operate permission and will be able to trigger pipelines
            and its stages within this group.
        </p>
        <p>
            The <strong>"admin" permission</strong> makes the user a <cref topic="delegating_group_administration">
            Pipeline Group Administrator</cref> allowing him to view, operate and administer the pipeline group. In
            the below example, role "admins" has been granted this permission.
        </p>
        <p>
            Note that is is possible to give a user or role only the operate permission. In the example below, the
            user "bot" only has operate permission. That means they can not view the pipeline, they can
            only operate it. This can be used to enable a script to operate on pipelines via the APIs without
            letting that user access any other features of Go.
        </p>
        <p>
            To edit the permissions for a pipeline group, navigate to the "Pipelines" tab on the "Admin" section:
        </p>
        <screenshot src="resources/images/cruise/group_list.png" />
        <p>
            Then, click the "Edit" link for the pipeline group you want to manage permissions for:
        </p>
        <screenshot src="resources/images/cruise/group_permission.png" />
        <note>
            If no authorization is defined for a pipeline group, all Go users will have view and operate permissions
            to that group.
        </note>
        <p>For power users, here's how you would configure permissions via "Config XML":</p>
        <code><![CDATA[
<pipelines group="Shine">
  <authorization>
    <view>
      <user>aantony</user>
      <user>akrishna</user>
      <role>developer</role>
    </view>
    <operate>
      <user>bot</user>
      <role>developer</role>
    </operate>
    <admins>
      <role>admins</role>
    </admins>
  </authorization>
  ...
</pipelines>
]]></code>
      </section>
	<section title="Adding authorization to approvals" id="approvals">
	<p>In Go, it is possible to specify <cref topic="managing_pipelines">manual approvals</cref> between stages. You can also specify which user is allowed to trigger manual approvals.</p>
    <p>The authorization can be inherited from the pipeline group this pipeline belongs to. But defining specific permissions overrides this. In the example below, only members of the role "admin", and the user "goleys", can trigger the approval. </p>
    <screenshot src="resources/images/cruise/admin/stage/stage_permissions.png" />

    <p> For power users, here's how you would configure authorization for approvals for a stage via "Config XML":</p>
	<code>
&lt;stage name="defaultStage"&gt;<strong>
  &lt;approval type="manual"&gt;
    &lt;authorization&gt;
      &lt;role&gt;admin&lt;/role&gt;
      &lt;user&gt;goleys&lt;/user&gt;
    &lt;/authorization&gt;
  &lt;/approval&gt;</strong>
  &lt;jobs&gt;
    &lt;job name="deploy"&gt;
      &lt;resources&gt;
        &lt;resource&gt;uat&lt;/resource&gt;
      &lt;/resources&gt;
      &lt;tasks&gt;
        &lt;ant target="deploy" /&gt;
      &lt;/tasks&gt;
    &lt;/job&gt;
  &lt;/jobs&gt;
&lt;/stage&gt;
	</code>
	</section>
    <section title="Specifying permissions for templates" id="template-admin">
        <p>
            A Go Administrator can make any user a template administrator for a specific template.
            As a template administrator, a user can now view and edit the template to which he has permissions.
        </p>
        <p>
            To edit the permissions for a template, navigate to the "Templates" tab on the "Admin" section:
        </p>
        <screenshot src="resources/images/cruise/admin/template/templates_tab_on_admin_page.png" />
        <p>
            Then, click the "Permissions" link for the template you want to manage permissions for:
        </p>
        <screenshot src="resources/images/cruise/admin/template/add_template_permissions.png" />
        <p>For power users, here's how you would configure permissions via "Config XML":</p>
        <code><![CDATA[
<templates>
    <pipeline name="app-1-template">
      <authorization>
        <admins>
          <user>operate</user>
        </admins>
      </authorization>
      ...
    </pipeline>
  </templates>
]]></code>
    </section>
    <section title="Also See">
        <bullets>
            <item><cref topic="delegating_group_administration">Delegating group administration</cref></item>
        </bullets>
    </section>
  </chapter>
