<?xml version="1.0"?>
<!-- *************************GO-LICENSE-START******************************
 * Copyright 2014 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *************************GO-LICENSE-END******************************* -->

<!DOCTYPE chapter SYSTEM "cruise_help.dtd">
<chapter title="Parameterize your Configuration">
    <p>
        Go allows you to parameterize your pipelines and pipeline templates. This powerful feature can help reduce
        repetition within your configurations and also allows for complex setups using a combination of parameters
        and pipeline templates.
    </p>
    <section title="Using Web Interface">
      <p>Edit the <strong>Parameters</strong> tab when defining a <strong>pipeline</strong>.</p>
      <img src="resources/images/cruise/admin/use_parameters_in_configuration.png"/>
    </section>
    <section title="Defining and using a parameter" id="parameters">
        <p>
            Parameter values are defined in the &lt;params&gt; tag within a pipeline and can be used anywhere within
            that pipeline using #{param_name}. The following example defines a new parameter called "myParam" and
            uses it in a job.
        </p>
        <code>
            <!-- WARNING - the following has an escaped CDATA section - be careful when editing it please! -->
            <![CDATA[
<pipeline name="my_pipeline">
  <params>
    <param name="myParam">hello world</param>
  </params>
  <stage name="my_stage">
    <jobs>
      <job name="my_job">
        <tasks>
          <exec command="echo" args="#{myParam}"/>
        </tasks>
      </job>
    </jobs>
  </stage>
</pipeline>
            ]]>
        </code>

        <note>
            <strong>NOTE:</strong> If you want to use the <strong>#</strong> literal, you can escape it using another <strong>#</strong> literal. For example, if the
            parameter "foo" has the value "one", then:

            <br/>

            <table>
                <header-row>
                    <col-header>String</col-header>
                    <col-header>Evaluates to...</col-header>
                </header-row>
                <row>
                    <col>#{foo}</col>
                    <col>one</col>
                </row>
                <row>
                    <col>##{foo}</col>
                    <col>#{foo}</col>
                </row>
                <row>
                    <col>###{foo}</col>
                    <col>#one</col>
                </row>
            </table>
        </note>
    </section>

    <section title="Using parameters in pipeline templates">
        <p>
            Parameter usage within <cref topic="pipeline_templates" anchor="pipelinetemplates">templates</cref> is
            similar to usage within pipelines. The only difference being, you cannot define parameters in a
            template.
        </p>

        <code>
            <!-- WARNING - the following has an escaped CDATA section - be careful when editing it please! -->
            <![CDATA[
<pipeline name="trunk" template="my_template">
  <params>
    <param name="WORKING_DIR">trunk</param>
  </params>
  ...
</pipeline>

<pipeline name="branch" template="my_template">
  <params>
    <param name="WORKING_DIR">branch</param>
  </params>
  ...
</pipeline>
            ]]>
        </code>

        <p>The parameter defined above is used the template below.</p>

        <code>
            <!-- WARNING - the following has an escaped CDATA section - be careful when editing it please! -->
            <![CDATA[
<pipeline name="my_template">
  <stage name="my_stage">
    <jobs>
      <job name="my_job">
        <tasks>
          <exec command="echo" args="Updating code from svn repository svn://codebase/#{WORKING_DIR}"/>
        </tasks>
      </job>
    </jobs>
  </stage>
</pipeline>
            ]]>
        </code>
    </section>

    <section title="Rules around usage of parameters" id="rules">
        <p>
            While parameters are generally very flexible, there are some restrictions.
        </p>
        <p>
            <strong>You cannot use a parameter to define:</strong>
        </p>
        <bullets>
            <item>Pipeline name</item>
            <item>Stage name</item>
            <item>Job name</item>
            <item>A Job's property name</item>
            <item>The &lt;runif&gt; configuraion for a job's task</item>
            <item>Another parameter (i.e. you cannot define a parameter using another paramter)</item>
            <item>Pipeline template name</item>
            <item>Material name</item>
            <item>Material passwords (however, for Git and Mercurial, passwords are not captured as separate attribute, hence can be parameterized)</item>
            <item>Trigger-type for Stage</item>
        </bullets>

        <p>
            <strong>Other restrictions:</strong>
        </p>
        <bullets>
            <item>Parameters can currently only be defined within a pipeline.</item>
            <item>A parameter cannot be composed with another parameter i.e. #{foo#{bar}} will not be evaluated recursively.</item>
            <item>If a parameter is referenced but is not defined, then the configuration is invalid (Go will not let you save an invalid configuration).</item>
        </bullets>
    </section>
 </chapter>


