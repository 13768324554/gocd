<?xml version="1.0"?>
<!-- *************************GO-LICENSE-START******************************
 * Copyright 2014 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *************************GO-LICENSE-END******************************* -->

<!DOCTYPE chapter SYSTEM "cruise_help.dtd">
<chapter title="OpenSocial gadgets">
  <p>ThoughtWorks Studios products use the <exref url="http://www.opensocial.org/">OpenSocial</exref> gadget stack to provide UI integrations. This provides a secure, standards-based platform for displaying one application's content in another application. Part of this infrastructure is that Go is itself an OpenSocial gadget rendering server. In general, a gadget is simply a piece of content from another application, such as showing a Mingle card activity table inside of Go. If you use iGoogle and have customized your home page, you have worked with OpenSocial gadgets.</p>
  <p>Most OpenSocial gadgets are publicly available content that do not require authentication and authorization. However, some gadgets, such as those published by the ThoughtWorks Studios products Go and Mingle, do require authorization. To accomplish this, Go's gadget rendering server supports OAuth 2.0 services.</p>
  <p>Enabling Go for OAuth 2.0 enabled gadgets does require the Go administrator to take <cref topic="mingle_in_go">extra configuration steps</cref>.
  </p>
<hint>If you are simply looking to configure the display of Mingle card activity gadgets in Go, please skip straight to the <cref topic="mingle_in_go">instructions that are specific to showing Mingle gadgets in Go.</cref></hint>
  <p>A gadget rendering server with OAuth 2.0 capabilities similar to what Go provides would be capable of showing ThoughtWorks Studios gadgets. That is, if iGoogle were to start supporting OAuth 2.0 in conjunction with its gadget support, and your Go instance was on a public server, it would be possible to display ThoughtWorks Studios gadgets on your home page. This is not currently possible so look for more on this from us in the future.</p>  
</chapter>
