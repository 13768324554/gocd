<?xml version="1.0"?>
<!-- *************************GO-LICENSE-START******************************
 * Copyright 2014 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *************************GO-LICENSE-END******************************* -->

 <!DOCTYPE chapter SYSTEM "cruise_help.dtd">
 <chapter title="Backup Go Server">
    <p>
		You can use Go's administration interface to perform an One-Click Backup of Go. You can also perform the backup <cref topic="Backup_API">using the API</cref>.
    </p>
	<subsection title="Steps to initiate backup">
    	<bullets>
	        <item>On the Go Administration page, click on the Backup tab.</item>
	        <img src="resources/images/cruise/admin/backup/backup_tab.png"/>
	        <item>Click on "BACKUP"</item>
	        <img src="resources/images/cruise/admin/backup/backup_button.png"/>
	        <item>Click "PROCEED"</item>
	        <img src="resources/images/cruise/admin/backup/backup_proceed.png"/>
            <note>Note: Go will be unusable during the backup process.</note>
	        <item>
				Backup time is proportional to the database and configuration size. We suggest you backup Go when the Go Server is idle.
				Users who are logged into the Go Dashboard will be redirected to a maintenance page during the backup. On backup completion
				they will be redirected to the page they were on.
			</item>
	    </bullets>
	</subsection>
    <subsection title="What is backed up?" collapsed="true">
        <p>
            The backup will be performed into the <strong>{ARTIFACT_REPOSITORY_LOCATION}/serverBackups</strong> directory. {ARTIFACT_REPOSITORY_LOCATION} for your server
            can be found as mentioned <cref topic="configuring_server_details" anchor="artifact_repo_config">here</cref>.
        </p>
        <p>
            The backup directory will be named <strong>backup_{TIMESTAMP}</strong> where the <strong>{TIMESTAMP}</strong> is the time
            when the backup was initiated.
        </p>
        <p>
            <bullets>
                <item>Database – This is in a zip called <strong>db.zip</strong>. The zip has a single DB file called <strong>cruise.h2.db</strong></item>
                <item>Configuration – This is in a zip called <strong>config-dir.zip</strong>. This zip contains the XML configuration, Jetty server configuration, Keystores and all other Go's internal configurations.</item>
                <item>XML Configuration Version Repo – This is in a zip called <strong>config-repo.zip</strong>. This zip contains the Git repository of the XML configuration file.</item>
                <item>Go version – This is a file called <strong>version.txt</strong>. This file contains the version of the Go server when the backup was initiated</item>
            </bullets>
        </p>
    </subsection>
    <subsection title="What is not backed up?" collapsed="true">
        <note>Note: Please refer to the <cref topic="installing_go_server" anchor="location_of_files">this</cref> page to see what the {SERVER_INSTALLATION_DIR} location is on different platforms.</note>
        <p>
            The following are not backed up as a part of the Go backup process. Please ensure that these are manually backed up regularly.
            <bullets>
                <item>Artifacts - Please refer to <cref topic="admin_out_of_disk_space" anchor="new_mount_for_artifacts">this section</cref> to find out how to deal with artifacts</item>
                <item>Test Reporting Data - This is found at the location <strong>{SERVER_INSTALLATION_DIR}/db/shine</strong>. This contains the data used in the Failed Test History reporting</item>
                <item>Environment Variables - On Windows the environment variables that might be set for the user and on Linux the changes made to <strong>/etc/default/go-server</strong> are not backed up.</item>
                <item>Log Files</item>
            </bullets>
        </p>
        <strong>Strategy to backup Artifacts and Test Reporting Data</strong>
        <br/>
        <p>
            Artifacts and the Test Reporting Data keep getting new files and directories added to them. So, it is a good idea to use <strong>rsync</strong> to copy the contents of these
            two into a backup location.
        </p>
        <p>
            <i>For Instance:</i> Lets say you have a copy of all the files till 12-02-2012 in a location. On 20-02-2012, you can do something like:
            <code>rsync -avzP {ARTIFACT_LOCATION} {BACKUP_LOCATION}</code>.
            This makes sure that only the files and directories that got newly added will be synced to the {BACKUP_LOCATION} and not the entire contents.
        </p>
    </subsection>
    <subsection title="Restoring Go using backup" collapsed="true">
        <note>Note: Please refer to the <cref topic="installing_go_server" anchor="location_of_files">this</cref> page to see what the {SERVER_INSTALLATION_DIR} location is on different platforms.</note>
        <p>
            The restoration process is not automated and needs to be done manually. Please refer to the previous sections about the contents of the backup.
            <br/>
            <strong>Steps to restore</strong>
            <br/>
            <bullets>
                <item>
                    In order to restore the Go server from a backup, the server must first be stopped. Make sure the process is completely dead before starting the restoration.
                </item>
                <item>
                    Choose the backup directory that you want to restore from.
                    <note>
                        Note: <strong>You cannot restore from a backup whose version is bigger than the version of the Go server being used.</strong>
                        <p>
                        <i>For example:</i> If the backup is from version 12.3 and the server installation is of version 12.2, the restoration might not work.
                        You can check the version of the backup from the <strong>version.txt</strong> file.
                        </p>
                    </note>
                </item>
                <item>
                    You might want to keep a copy of all the files and directories that are involved in restoration. This will help in troubleshooting if there was a problem. Following this, make sure
                    all the destination directories mentioned in the following steps are empty.
                    <p>
                        <i>For example:</i> Before restoring the Database, make sure the <strong>{SERVER_INSTALLATION_DIR}/db/h2db</strong> is backed up and the directory is emptied.
                    </p>
                </item>
                <item>
                    Database – Unzip the <strong>db.zip</strong> found in the backup directory. Unzip will create a file called <strong>cruise.h2.db</strong>. Copy this file to the directory
                    <strong>{SERVER_INSTALLATION_DIR}/db/h2db</strong>.
                </item>
                <item>
                    Configuration - Unzip the <strong>config-dir.zip</strong> into a temp directory. Copy all the files from this directory to <strong>{SERVER_INSTALLATION_DIR}/config</strong> directory
                    on Windows and Mac or <strong>/etc/go</strong> on Linux and Solaris.
                </item>
                <item>
                    Configuration History - Unzip the <strong>config-repo.zip</strong> into temp directory. Recursively copy all the contents from this directory to <strong>{SERVER_INSTALLATION_DIR}/db/config.git</strong>.
                </item>
                <item>
                    Make sure the ownership of all the files that are restored are the same as the user running the Go server.
                    <p>
                        <i>For example:</i> Make sure you run a "chown -R go:go {SERVER_INSTALLATION_DIR}/db/h2db" after Database restoration.
                    </p>
                </item>
                <item>
                    Start the Go server
                </item>
            </bullets>
        </p>
    </subsection>
</chapter>
